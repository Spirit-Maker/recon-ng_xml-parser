#!/usr/bin/python3

from xml.etree import ElementTree as ET
import argparse

def argCreater():
	parser = argparse.ArgumentParser(description='Parse XML generated by Recon-ng for required filed');
	parser.add_argument('--file','-f', help='File path that needs to be parsed', required=True);
	parser.add_argument('--child','-ch', help='Child to be parsed for values like ip_address\n\thost\n\tmodule', required=True);
	parser.add_argument('--outFile', '-o', help='Write text file, provide filename alongwith directory');
	return parser.parse_args();
	

def parseXML (args):
	try:
		xmlTree = ET.parse(args.file);	
	except ET.ParseError:
		print ("File not found");

	treeRoot = xmlTree.getroot();
	childValue = [];

	for child in treeRoot.iter(args.child):
		if child.text is not None and child.text not in childValue:
			childValue.append(child.text);

	print(" , ".join(str(x) for x in childValue));
	print ("\n" + str(len(childValue)));

	return childValue;

	
def writeFile (args,chilren):
	path = args.outFile;
	file = open (path,"w");
	data = "\n".join(str(x) for x in chilren);
	file.write(data);
	file.close();
	print ("File generated to '%s'" %(path));

def main(*args,**kwargs):
	args = argCreater();
	children = parseXML (args);
	if args.outFile is not None:
		writeFile (args,children);

if __name__ == '__main__':
	main();